#!/usr/bin/env bash # raindrop - Add a bookmark to Raindrop.io via API
# Works cleanly when triggered via macOS Shortcuts + Hyperkey

set -euo pipefail

# üîë Get API token securely from macOS Keychain
RAINDROP_TOKEN=$(security find-generic-password -a "$USER" -s "raindrop_token" -w 2>/dev/null || true)

if [[ -z "$RAINDROP_TOKEN" ]]; then
  notify "No Raindrop token found in Keychain. Run setup first." "Raindrop ‚ö†Ô∏è" "Basso"
  exit 1
fi

# Function for clean macOS notifications
notify() {
  local msg="$1"
  local title="${2:-Raindrop}"
  local sound="${3:-Ping}"
  terminal-notifier -title "$title" -message "$msg" -sound "$sound" >/dev/null 2>&1 || true
}

# Step 1: Get URL (from argument or clipboard)
ARG1="${1:-}"
ARG2="${2:-Quick Add}"
ARG3="${3:-cli}"

if [[ "$ARG1" =~ ^https?:// ]]; then
  URL="$ARG1"
else
  CLIP=$(pbpaste || true)
  if [[ "$CLIP" =~ ^https?:// ]]; then
    URL="$CLIP"
  else
    # Fallback: ask for URL only if no valid one in clipboard
    URL=$(
      osascript <<'EOF' 2>/dev/null || echo ""
      tell application "System Events"
        display dialog "Enter a URL to bookmark:" default answer "" with title "Raindrop" buttons {"Cancel", "OK"} default button "OK"
        text returned of result
      end tell
EOF
    )
  fi
fi

# Step 2: Validate URL
if [[ -z "${URL:-}" || ! "$URL" =~ ^https?:// ]]; then
  notify "No valid URL found to bookmark." "Raindrop ‚ùå" "Basso"
  exit 0
fi

# Step 3: Send API request
response=$(curl -s -X POST "https://api.raindrop.io/rest/v1/raindrop" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $RAINDROP_TOKEN" \
  -d "{
    \"link\": \"$URL\",
    \"title\": \"$ARG2\",
    \"tags\": [\"$ARG3\"]
  }")

# Step 4: Notify user
if echo "$response" | jq -e '.item.id // empty' >/dev/null 2>&1; then
  notify "Bookmarked successfully!" "Raindrop ‚úÖ" "Ping"
else
  notify "Failed to add bookmark." "Raindrop ‚ùå" "Basso"
fi
